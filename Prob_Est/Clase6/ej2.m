pkg load statisticsclose allrand("seed",1234);betarnd("seed",1234);binornd("seed",1234);% numero de simulacionesn = 500;% parametros de la distribucion a priori de theta% media de theta a prioritheta0 = 1;% varianza de theta a priorisigma0_2 = 1;% varianza de la muestra xsigma_x_2 = 0,1;% estimacion MAP de thetatheta_map = 0;      %  genero la distribucion a priori de theta, n experimentostheta_a_priori_vect = sqrt(sigma0_2)*randn(n,1) + theta0;% x_dado_theta_vectorx_dado_theta_vector= zeros(n,n);% arg max thetatheta_arg_max = zeros(n,1);x =3for i=1:n            % theta a priori      theta_a_priori = theta_a_priori_vect(i);      % genero la verosimilitud, 1 muestra por experimento      x_dado_theta_vector(i,:)  = sqrt(sigma_x_2) * randn(n,1) + theta_a_priori;            % busco el indice de maximos      [valor indice] = max(x_dado_theta_vector(i,:) );      % chequeo si el maximo contiene a x      if((valor > x -0.2) &&  (valor < x+0.2))          % guardo el valor          theta_arg_max(i) = valor;        end     endfor  theta_map_teorico = (sigma_x_2 / (sigma0_2 + sigma_x_2)) * theta0 +...                                                                  (sigma0_2 / (sigma0_2 + sigma_x_2)) * x                                                                      % busco los theta optimos distintos de cero  numero_de_no_ceros = find(theta_arg_max ~= 0);    theta_map_est = sum(theta_arg_max)/length(numero_de_no_ceros)